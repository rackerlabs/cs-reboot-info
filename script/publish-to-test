#!/bin/bash
#
# Publish build artifacts (binaries and SHA1 checksum files) to Cloud Files
# Pre-requisites/input:
# - RAX_API_KEY contains API key of Rackspace Cloud account where build artifacts
#   are to be published.

set -euo pipefail
IFS=$'\n\t'

ROOT=$(dirname $0)/..
cd ${ROOT}

if [ -z ${RAX_API_KEY} ]; then
  echo "You must provide RAX_API_KEY to publish."
  exit 1
fi

# "Constants", LOL
RAX_REGION=IAD
CONTAINER_NAME=cs-reboot-info
IDENTITY_URL=https://identity.api.rackspacecloud.com/v2.0

# Auth
response=$(curl -s -X POST $IDENTITY_URL/tokens \
    -H 'Content-Type: application/json' \
    -d '{ "auth": { "RAX-KSKEY:apiKeyCredentials": { "username":"'$RAX_USERNAME'", "apiKey": "'$RAX_API_KEY'"}}}' | python -mjson.tool)

token=$(echo "$response" | grep -A5 token | grep id | awk -F\" '{print $4}')
cf_api_url=$(echo "$response" | grep -i mosso | grep -i $RAX_REGION | grep -i publicURL | grep -v cdn | awk -F\" '{print $4}')
cf_cdn_api_url=$(echo "$response" | grep -i cdn5 | grep -i publicURL | awk -F\" '{print $4}')

# Determine app version
app_version=$(grep 'appVer\s*=' main.go | awk -F\" '{print $2}')

# Upload to test release "folder" in container
for f in bin/cs-reboot-info_*; do
    echo "Publishing $f..."
    g=$(basename $f)
    curl -s -X PUT $cf_api_url/$CONTAINER_NAME/releases/test_$app_version/$g \
	       -H 'X-Auth-Token: '$token \
	       --data-binary @$f
done

# Determine CDN SSL base URL and print it out
cf_cdn_ssl_url=$(curl -s -I $cf_cdn_api_url/$CONTAINER_NAME \
    -H 'X-Auth-Token: '$token | grep 'X-Cdn-Ssl-Uri' | awk '{print $2}' | awk -F'\r' '{print $1}')
cf_cdn_ssl_url=${cf_cdn_ssl_url}/releases/test_$app_version/
echo "cdn_ssl_base_url: $cf_cdn_ssl_url"
